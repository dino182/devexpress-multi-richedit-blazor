@page "/"

<DxButton Text="Debug"
          Click="@OnDebug"
          RenderStyle="@ButtonRenderStyle.Primary" />

<DxButton Text="Reload"
          Click="@OnReload"
          RenderStyle="@ButtonRenderStyle.Primary" />

@foreach (var model in _dataModels)
{
    <div class="row" @key="@model">
        <DataView @ref="@_dataViews[model]"
                  Model="@model" />
        <DxButton Text="Remove"
                  Click="@(() => RemoveModel(model))"
                  RenderStyle="@ButtonRenderStyle.Danger" />
    </div>
}

<DxButton Text="Add"
          Click="@AddModel"
          RenderStyle="@ButtonRenderStyle.Primary" />

@code {
    private static int _count;

    private readonly List<DataModel> _dataModels = new()
    {
        new DataModel { DocumentName = $"Test-{_count++}" },
        new DataModel { DocumentName = $"Test-{_count++}" }
    };

    private readonly Dictionary<DataModel, DataView> _dataViews = new();

    private void AddModel()
    {
        _dataModels.Add(new DataModel { DocumentName = $"Test-{_count++}" });
    }

    private void RemoveModel(DataModel model)
    {
        _dataModels.Remove(model);
        _dataViews.Remove(model);
    }

    private async Task RebindDocuments()
    {
        // Force the RichEdit controls to update their data bindings
        foreach (var view in _dataViews.Values)
        {
            await view.ExportDocumentContent();
        }
    }

    private async Task OnDebug()
    {
        // Update data bindings for all the RichEdit controls
        await RebindDocuments();

        foreach (var model in _dataModels)
        {
            Console.WriteLine($"{model.DocumentName}: {model.DocumentContent}");
        }
    }

    private async Task OnReload()
    {
        foreach (var view in _dataViews.Values)
        {
            await view.ResetDocumentContent();
        }
    }
}